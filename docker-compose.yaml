services:
  db:
    image: mongo:8.0.13
    command: ["--replSet", "rs0", "--bind_ip_all"]
    restart: always
    environment:
      MONGO_INITDB_DATABASE: app_development
    volumes:
      - mongodb_data:/data/db
    post_start:
      - command: >
          bash -lc '
            # wait for mongod
            until mongosh --host localhost --quiet --eval "db.runCommand({ ping: 1 })" >/dev/null 2>&1; do
              sleep 1
            done
            # initiate RS if needed (idempotent)
            mongosh --quiet --eval "
              try { if (rs.status().ok === 1) { print(\"RS already initiated\"); quit(0) } } catch(e) {}
              rs.initiate({_id:\"rs0\", members:[{_id:0, host:\"db:27017\"}]});
              print(\"RS initiated\");
            "
          '

  valkey:
    image: valkey/valkey:8.1.3
    volumes:
      - valkey_data:/data

  api:
    build:
      context: .
      dockerfile: Dockerfile.development
    command: >
      bash -lc "bundle exec rails db:mongoid:create_indexes &&
                bundle exec rails db:seed &&
                bundle exec rails s -b 0.0.0.0"
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    stdin_open: true
    tty: true
    depends_on:
      - db
      - valkey

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.development
    command: ["sidekiq"]
    volumes:
      - .:/app
    depends_on:
      - db
      - valkey

volumes:
  mongodb_data:
  valkey_data:
